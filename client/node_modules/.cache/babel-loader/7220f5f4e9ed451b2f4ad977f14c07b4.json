{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects'; //Non blocking call\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailed } from '../shop/shop.actions.js';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  try {\n    console.log(\"i'm here\");\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //call takes method or function as first argument and parameter as second\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailed());\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","fetchCollectionsSuccess","fetchCollectionsFailed","firestore","convertCollectionsSnapshotToMap","shopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas","all"],"mappings":"AAAA,SACIA,UADJ,EAEIC,IAFJ,EAGIC,GAHJ,QAIW,oBAJX,C,CAIiC;;AAEjC,SACIC,uBADJ,EAEIC,sBAFJ,QAGO,yBAHP;AAKA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACJ,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACK,+BAAD,EAAkCO,QAAlC,CAAjC,CAJI,CAIyE;;AACzE,UAAMX,GAAG,CAACC,uBAAuB,CAACY,cAAD,CAAxB,CAAT;AAEH,GAPD,CAOE,OAAMC,KAAN,EAAa;AACX,UAAMd,GAAG,CAACE,sBAAsB,EAAvB,CAAT;AACH;AACJ;AAED,OAAO,UAAUa,oBAAV,GAAiC;AACpC,QAAMjB,UAAU,CACZO,eAAe,CAACW,uBADJ,EAEZV,oBAFY,CAAhB;AAIH;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAMC,GAAG,CAAC,CACNnB,IAAI,CAACgB,oBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { \r\n    takeLatest, \r\n    call,\r\n    put \r\n    } from 'redux-saga/effects'; //Non blocking call\r\n\r\nimport { \r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailed\r\n} from '../shop/shop.actions.js';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAsync() {\r\n    try {\r\n        console.log(\"i'm here\")\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);//call takes method or function as first argument and parameter as second\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n\r\n    } catch(error) {\r\n        yield put(fetchCollectionsFailed())\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeLatest(\r\n        shopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([\r\n        call(fetchCollectionStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}