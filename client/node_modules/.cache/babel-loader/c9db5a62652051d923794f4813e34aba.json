{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\UDEMY\\\\Andrei\\\\Complete React Developer in 2020\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport CollectionPage from '../collection/collection.component.jsx';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component.jsx';\nimport WithSpinner from '../../components/spinner/spinner.components.jsx';\nimport { firestore } from '../../firebase/firebase.utils.js';\nimport { convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\n\nclass ShopPage extends Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      if (snapshot) {\n        const CollectionsMap = convertCollectionSnapshotToMap(snapshot);\n        updateCollections(CollectionsMap);\n      }\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToPros = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToPros)(ShopPage);","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","updateCollections","CollectionPage","CollectionOverview","WithSpinner","firestore","convertCollectionSnapshotToMap","ShopPage","constructor","unsubscribeFromSnapshot","state","isLoggedIn","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","CollectionsMap","componentWillUnmount","render","match","path","mapDispatchToPros","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,kBAAP,MAA+B,0EAA/B;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AAEA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,8BAAT,QAA+C,kCAA/C;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BU,EAAAA,WAAW,GAAG;AACV;AADU,SAQdC,uBARc,GAQY,IARZ;AAGV,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAIDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACxC,UAAGA,QAAH,EAAa;AACT,cAAMC,cAAc,GAAGZ,8BAA8B,CAACW,QAAD,CAArD;AACAhB,QAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACH;AAEJ,KAND;AAOH;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEnB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEpB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMC;;AApC4B;;AAuCjC,MAAMqB,iBAAiB,GAAGC,QAAQ,KAAK;AACnCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAC7BD,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AAFuB,CAAL,CAAlC;;AAKA,eAAezB,OAAO,CAAC,IAAD,EAAOuB,iBAAP,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\r\n\r\nimport CollectionPage from '../collection/collection.component.jsx';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component.jsx';\r\nimport WithSpinner from '../../components/spinner/spinner.components.jsx';\r\n\r\nimport { firestore } from '../../firebase/firebase.utils.js';\r\nimport { convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\r\n\r\nclass ShopPage extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n    \r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        collectionRef.onSnapshot( async snapshot => {\r\n            if(snapshot) {\r\n                const CollectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n                updateCollections(CollectionsMap)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n    const { match } = this.props;\r\n    return(\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToPros = dispatch => ({\r\n    updateCollections: collectionsMap => \r\n        dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToPros)(ShopPage);"]},"metadata":{},"sourceType":"module"}