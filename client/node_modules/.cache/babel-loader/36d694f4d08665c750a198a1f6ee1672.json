{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { SignInSuccess, SignInFailure, signedOutSuccess, signedOutFailure } from './user.actions.js';\nimport userActionsTypes from './user.types.js';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils.js';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(\"first step\");\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* getSnapshotFromAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onSignedOutStart() {\n  yield takeLatest(userActionsTypes.USER_SIGNED_OUT_START, signedOut);\n}\nexport function* signedOut() {\n  try {\n    yield auth.signOut();\n    yield put(signedOutSuccess());\n  } catch (error) {\n    yield put(signedOutFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignedOutStart)]);\n}","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","SignInSuccess","SignInFailure","signedOutSuccess","signedOutFailure","userActionsTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInWithGoogle","user","signInWithPopup","getSnapshotFromAuth","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","userAuth","userRef","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","onSignedOutStart","USER_SIGNED_OUT_START","signedOut","signOut","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { \r\n    SignInSuccess,\r\n    SignInFailure,\r\n    signedOutSuccess,\r\n    signedOutFailure\r\n} from './user.actions.js';\r\n\r\nimport userActionsTypes from './user.types.js';\r\nimport { \r\n    auth, \r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils.js';\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromAuth(user);\r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    console.log(\"first step\")\r\n        yield getSnapshotFromAuth(user);    \r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* getSnapshotFromAuth(userAuth) {\r\n    try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth)\r\n    const userSnapshot = yield userRef.get();\r\n        yield put(SignInSuccess({ \r\n            id: userSnapshot.id, \r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n    const userAuth = yield getCurrentUser();\r\n    if(!userAuth) return \r\n        yield(getSnapshotFromAuth(userAuth));\r\n    } catch(error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignedOutStart() {\r\n    yield takeLatest(userActionsTypes.USER_SIGNED_OUT_START, signedOut)\r\n}\r\n\r\nexport function* signedOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signedOutSuccess())\r\n    } catch(error) {\r\n        yield put(signedOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n            call(onGoogleSignInStart),\r\n            call(onEmailSignInStart),\r\n            call(onCheckUserSession),\r\n            call(onSignedOutStart)\r\n            ])\r\n}"]},"metadata":{},"sourceType":"module"}