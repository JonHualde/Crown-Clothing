{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\UDEMY\\\\Andrei\\\\Complete React Developer in 2020\\\\crown-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport { emailSignUpStart } from '../../redux/user/user.actions.js';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  emailSignUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('the passwords are not matching.');\n      return;\n    }\n\n    emailSignUpStart(displayName, email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \" SIGN UP\", /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  emailSignUpStart: userCredentials => dispatch(emailSignUpStart({\n    userCredentials\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","emailSignUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component.jsx';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\nimport { emailSignUpStart } from '../../redux/user/user.actions.js';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ emailSignUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({ \r\n        displayName: '', \r\n        email: '', \r\n        password: '', \r\n        confirmPassword: ''\r\n    })\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n        if(password !== confirmPassword) {\r\n            alert('the passwords are not matching.')\r\n            return;\r\n        }\r\n        emailSignUpStart(displayName, email, password);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n        \r\n        return (\r\n            <div className='sign-up'> SIGN UP\r\n            <h2 className='title'>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            \r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput type='text' name='displayName' value={displayName}\r\n                handleChange={handleChange} label='display Name' required />\r\n    \r\n                <FormInput type='email' name='email' value={email}\r\n                handleChange={handleChange} label='email' required />\r\n\r\n                <FormInput type='password' name='password' value={password}\r\n                handleChange={handleChange} label='password' required />\r\n\r\n                <FormInput type='password' name='confirmPassword' value={confirmPassword}\r\n                handleChange={handleChange} label='confirm Password' required />\r\n\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    emailSignUpStart: (userCredentials) => \r\n        dispatch(emailSignUpStart({ userCredentials }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}