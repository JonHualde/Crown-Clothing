{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\UDEMY\\\\Andrei\\\\Complete React Developer in 2020\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport CollectionPage from '../collection/collection.component.jsx';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component.jsx';\nimport WithSpinner from '../../components/spinner/spinner.components.jsx';\nimport { firestore } from '../../firebase/firebase.utils.js';\nimport { convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crown-clothing-225a8/databases/(default)/collections').then(response => response.json()).then(data => console.log(data, 'data')).catch(error => console.log(error)); // collectionRef.get().then((snapshot => {\n    //     const CollectionsMap = convertCollectionSnapshotToMap(snapshot);\n    //         updateCollections(CollectionsMap)\n    //             this.setState({ loading: false \n    // \n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToPros = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToPros)(ShopPage);","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","updateCollections","CollectionPage","CollectionOverview","WithSpinner","firestore","convertCollectionSnapshotToMap","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","data","console","log","catch","error","render","match","path","mapDispatchToPros","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,kBAAP,MAA+B,0EAA/B;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AAEA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACD,kBAAD,CAAlD;AACA,MAAMK,0BAA0B,GAAGJ,WAAW,CAACF,cAAD,CAA9C;;AAEA,MAAMO,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BY,KAD6B,GACrB;AACJC,MAAAA,OAAO,EAAE;AADL,KADqB;AAAA,SAK7BC,uBAL6B,GAKH,IALG;AAAA;;AAO7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEZ,MAAAA;AAAF,QAAwB,KAAKa,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,mGAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAESF,IAFT,CAEcG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB,CAFtB,EAGSG,KAHT,CAGeC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAHxB,EAJgB,CAQhB;AACA;AACA;AACA;AACA;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEiB,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAId,KAAD,iBACzC,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGd,KAAD,iBAChD,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQC;;AAnC4B;;AAsCjC,MAAMe,iBAAiB,GAAGC,QAAQ,KAAK;AACnC7B,EAAAA,iBAAiB,EAAE8B,cAAc,IAC7BD,QAAQ,CAAC7B,iBAAiB,CAAC8B,cAAD,CAAlB;AAFuB,CAAL,CAAlC;;AAKA,eAAe/B,OAAO,CAAC,IAAD,EAAO6B,iBAAP,CAAP,CAAiCpB,QAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\r\n\r\nimport CollectionPage from '../collection/collection.component.jsx';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component.jsx';\r\nimport WithSpinner from '../../components/spinner/spinner.components.jsx';\r\n\r\nimport { firestore } from '../../firebase/firebase.utils.js';\r\nimport { convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n    \r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        fetch('https://firestore.googleapis.com/v1/projects/crown-clothing-225a8/databases/(default)/collections')\r\n            .then(response => response.json())\r\n                .then(data => console.log(data, 'data'))\r\n                .catch(error => console.log(error))\r\n        // collectionRef.get().then((snapshot => {\r\n        //     const CollectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n        //         updateCollections(CollectionsMap)\r\n        //             this.setState({ loading: false \r\n        // \r\n        \r\n    }\r\n\r\n    render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n\r\n    return(\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} render={ (props) => \r\n                <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\r\n            <Route path={`${match.path}/:collectionId`} render={(props) => \r\n                <CollectionsPageWithSpinner isLoading={loading} {...props} />} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToPros = dispatch => ({\r\n    updateCollections: collectionsMap => \r\n        dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToPros)(ShopPage);"]},"metadata":{},"sourceType":"module"}