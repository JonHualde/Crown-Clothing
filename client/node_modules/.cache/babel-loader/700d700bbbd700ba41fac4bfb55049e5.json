{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects'; //Non blocking call\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailed } from '../shop/shop.actions.js';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //call takes method or function as first argument and parameter as second\n  } catch (error) {\n    throw error;\n  } // collectionRef.get().then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap))\n  // }).catch(error => dispatch(fetchCollectionsFailed()) )\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","fetchCollectionsSuccess","fetchCollectionsFailed","firestore","convertCollectionsSnapshotToMap","shopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SACIA,SADJ,EAEIC,IAFJ,QAGW,oBAHX,C,CAGiC;;AAEjC,SACIC,uBADJ,EAEIC,sBAFJ,QAGO,yBAHP;AAKA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AAEJ,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC,CAJI,CAIyE;AAE5E,GAND,CAME,OAAMG,KAAN,EAAa;AACX,UAAMA,KAAN;AACH,GAXmC,CAehC;AACA;AACA;AACA;;AACP;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMhB,SAAS,CACXM,eAAe,CAACW,uBADL,EAEXV,oBAFW,CAAf;AAIH","sourcesContent":["import { \r\n    takeEvery, \r\n    call \r\n    } from 'redux-saga/effects'; //Non blocking call\r\n\r\nimport { \r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailed\r\n} from '../shop/shop.actions.js';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAsync() {\r\n    yield console.log(\"I am fired\");\r\n\r\n    try {\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);//call takes method or function as first argument and parameter as second\r\n    \r\n    } catch(error) {\r\n        throw(error)\r\n    }\r\n    \r\n\r\n\r\n        // collectionRef.get().then(snapshot => {\r\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     dispatch(fetchCollectionsSuccess(collectionsMap))\r\n        // }).catch(error => dispatch(fetchCollectionsFailed()) )\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        shopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}