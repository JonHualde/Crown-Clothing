{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { SignInSuccess, SignInFailure, signedOutSuccess, signedOutFailure, signUpSuccess, signUpFailure } from './user.actions.js';\nimport { clearOutBasketWhenLoggedOut } from '../cart/cart.actions.js';\nimport userActionsTypes from './user.types.js';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils.js';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(\"first step\");\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  try {\n    yield getSnapshotFromAuth(user, additionalData);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* getSnapshotFromAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_UP_START, signUpWithEmail);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onSignedOutStart() {\n  yield takeLatest(userActionsTypes.USER_SIGNED_OUT_START, signedOut);\n}\nexport function* signedOut() {\n  try {\n    yield auth.signOut();\n    yield put(signedOutSuccess());\n    yield put(clearOutBasketWhenLoggedOut());\n  } catch (error) {\n    yield put(signedOutFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onEmailSignUpStart), call(onCheckUserSession), call(onSignedOutStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["D:/Coding/UDEMY/Andrei/Complete React Developer in 2020/crown-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","SignInSuccess","SignInFailure","signedOutSuccess","signedOutFailure","signUpSuccess","signUpFailure","clearOutBasketWhenLoggedOut","userActionsTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInWithGoogle","user","signInWithPopup","getSnapshotFromAuth","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","signUpWithEmail","displayName","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","userAuth","userRef","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onEmailSignUpStart","EMAIL_SIGN_UP_START","onSignUpSuccess","EMAIL_SIGN_UP_SUCCESS","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","onSignedOutStart","USER_SIGNED_OUT_START","signedOut","signOut","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { \r\n    SignInSuccess,\r\n    SignInFailure,\r\n    signedOutSuccess,\r\n    signedOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n} from './user.actions.js';\r\n\r\nimport { clearOutBasketWhenLoggedOut } from '../cart/cart.actions.js';\r\nimport userActionsTypes from './user.types.js';\r\nimport { \r\n    auth, \r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils.js';\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromAuth(user);\r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n    try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    console.log(\"first step\")\r\n        yield getSnapshotFromAuth(user);    \r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUpWithEmail({ payload: { email, password, displayName }}) {\r\n    try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(\r\n        email, \r\n        password\r\n    )\r\n        yield put(signUpSuccess({ user, additionalData: { displayName} }))\r\n    } catch(error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\r\n    try {\r\n        yield getSnapshotFromAuth(user, additionalData)\r\n    } catch (error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* getSnapshotFromAuth(userAuth, additionalData) {\r\n    try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\r\n    const userSnapshot = yield userRef.get();\r\n        yield put(SignInSuccess({ \r\n            id: userSnapshot.id, \r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onEmailSignUpStart() {\r\n    yield takeLatest(userActionsTypes.EMAIL_SIGN_UP_START, signUpWithEmail)\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(userActionsTypes.EMAIL_SIGN_UP_SUCCESS, signInAfterSignUp )\r\n}\r\n\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n    const userAuth = yield getCurrentUser();\r\n    if(!userAuth) return \r\n        yield(getSnapshotFromAuth(userAuth));\r\n    } catch(error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignedOutStart() {\r\n    yield takeLatest(userActionsTypes.USER_SIGNED_OUT_START, signedOut)\r\n}\r\n\r\nexport function* signedOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signedOutSuccess())\r\n        yield put(clearOutBasketWhenLoggedOut())\r\n    } catch(error) {\r\n        yield put(signedOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n            call(onGoogleSignInStart),\r\n            call(onEmailSignInStart),\r\n            call(onEmailSignUpStart),\r\n            call(onCheckUserSession),\r\n            call(onSignedOutStart),\r\n            call(onSignUpSuccess)\r\n            ])\r\n}"]},"metadata":{},"sourceType":"module"}